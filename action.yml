name: Fallout tests
description: Check Fallout script data and messages for validity
branding:
  icon: message-circle
  color: green

inputs:
  scripts_h:
    description: scripts.h path
    required: false
    default: scripts_src/headers/scripts.h
  scripts_lst:
    description: scripts.lst path
    default: data/scripts/scripts.lst
    required: false
  scripts_dir:
    description: scripts directory
    required: false
    default: scripts_src
  dialog_dir:
    description: text/english/dialog path
    default: data/text/english/dialog
    required: false
  check_scripts:
    description: check scripts.h and scripts.lst
    default: "true"
    required: false
  check_lvars:
    description: check LVARs vs scripts.lst
    default: "true"
    required: false
  check_msgs:
    description: check msg references in scripts
    default: "true"
    required: false
  worldmap_path:
    description: if set, run worldmap tests
    default: "false"
    required: false
  worldmap_script_sets:
    description: "scripts allowed to go together in a encounter, like so: '-s 100,101  200,201,202'"
    default: "false"
    required: false

runs:
  using: "composite"
  steps:
    - name: Initialize environment
      shell: bash
      run: |
        set -xeu -o pipefail
        pip3 install -r "$GITHUB_ACTION_PATH/requirements.txt" --quiet
        echo "${GITHUB_ACTION_PATH}/scripts" >> $GITHUB_PATH

    - name: Test
      shell: bash
      run: $GITHUB_ACTION_PATH/action.sh
      env:
        INPUT_SCRIPTS_H: ${{ inputs.scripts_h }}
        INPUT_SCRIPTS_LST: ${{ inputs.scripts_lst }}
        INPUT_SCRIPTS_DIR: ${{ inputs.scripts_dir }}
        INPUT_DIALOG_DIR: ${{ inputs.dialog_dir }}
        INPUT_CHECK_SCRIPTS: ${{ inputs.check_scripts }}
        INPUT_CHECK_LVARS: ${{ inputs.check_lvars }}
        INPUT_CHECK_MSGS: ${{ inputs.check_msgs }}
        INPUT_WORLDMAP_PATH: ${{ inputs.worldmap_path }}
        INPUT_WORLDMAP_SCRIPT_SETS: ${{ inputs.worldmap_script_sets }}
